{"version":3,"sources":["components/ReminderForm.js","components/ViewReminders.js","services/reminders.js","App.js","index.js"],"names":["ReminderForm","addReminder","newName","handleReminderChange","newTime","handleTimeChange","onSubmit","value","onChange","type","ViewReminders","reminders","handleDelete","map","reminder","style","whiteSpace","timestring","timestamp","Date","toLocaleString","name","onClick","id","baseUrl","axios","get","newObject","post","delete","App","props","event","preventDefault","state","filter","n","length","alert","setState","reminderObject","reminderService","then","response","concat","data","target","console","log","window","confirm","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAoBeA,EAlBM,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,qBAAsBC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBACzE,OACA,8BACI,uBAAMC,SAAUL,EAAhB,UACI,0CACW,uBAAOM,MAAOL,EAASM,SAAUL,OAE5C,4CACa,uBAAOM,KAAK,iBAAiBF,MAAOH,EAASI,SAAUH,OAEpE,8BACI,wBAAQI,KAAK,SAAb,yBCYDC,EAvBO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAShC,OACA,8BACKD,EAAUE,KAAI,SAAAC,GACX,OACA,sBAAKC,MAAO,CAACC,WAAW,OAAxB,WAXkBC,EAYIH,EAASI,UAXtB,IAAIC,KAAKF,GAEfG,kBASwC,IAAKN,EAASO,KAAM,IAC3D,wBAAQC,QAAS,kBAAMV,EAAaE,EAASS,KAA7C,oBAAiE,uBAFrE,IAE4E,yBAFvCT,EAASO,MAX7B,IAACJ,Q,gBCHxBO,EAAU,4DAcD,EAZA,WACX,OAAOC,IAAMC,IAAIF,IAWN,EARA,SAACG,GACZ,OAAOF,IAAMG,KAAKJ,EAASG,IAOhB,EAJK,SAACJ,GACjB,OAAOE,IAAMI,OAAN,UAAgBL,EAAhB,YAA2BD,KC6EvBO,E,kDAnFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBR9B,YAAc,SAAC+B,GACbA,EAAMC,iBAEN,IAAMZ,EAAO,EAAKa,MAAMhC,QAIxB,GAFuB,EAAKgC,MAAMvB,UAAUwB,QAAO,SAAAC,GAAC,OAAIA,EAAEf,OAASA,KAEhDgB,OAAS,EAG1B,OAFAC,MAAM,gCACN,EAAKC,SAAS,CAACrC,QAAS,KAI1B,IAAMsC,EAAiB,CACrBnB,KAAMA,EACNH,UAAW,EAAKgB,MAAM9B,SAGxBqC,EACUD,GACPE,MAAK,SAAAC,GACN,EAAKJ,SAAS,CACZ5B,UAAW,EAAKuB,MAAMvB,UAAUiC,OAAOD,EAASE,MAChD3C,QAAS,SAxCI,EA6CnBC,qBAAuB,SAAC6B,GACtB,EAAKO,SAAS,CAAErC,QAAS8B,EAAMc,OAAOvC,SA9CrB,EAiDnBF,iBAAmB,SAAC2B,GAClBe,QAAQC,IAAIhB,EAAMc,OAAOvC,OACzB,EAAKgC,SAAS,CAAEnC,QAAS4B,EAAMc,OAAOvC,SAnDrB,EAsDnBK,aAAe,SAACW,GACV0B,OAAOC,QAAQ,uCACjBT,EACelB,GACZmB,MAAK,WACJD,IAECC,MAAK,SAAAC,GACJ,EAAKJ,SAAS,CAAE5B,UAAWgC,EAASE,cA5D5C,EAAKX,MAAQ,CACXvB,UAAWoB,EAAMpB,UACjBT,QAAS,GACTE,QAAS,IALM,E,qDASnB,WAAqB,IAAD,OAClBqC,IAEGC,MAAK,SAAAC,GACJ,EAAKJ,SAAS,CAAE5B,UAAWgC,EAASE,Y,oBAuD1C,WACE,OACE,gCACE,8CACA,cAAC,EAAD,CAAc5C,YAAakD,KAAKlD,YAClBC,QAASiD,KAAKjD,QAASC,qBAAsBgD,KAAKhD,qBAClDC,QAAS+C,KAAK/C,QAASC,iBAAkB8C,KAAK9C,mBAE5D,2CACA,cAAC,EAAD,CAAeM,UAAWwC,KAAKjB,MAAMvB,UAAWC,aAAcuC,KAAKvC,sB,GA9EzDwC,IAAMC,WCMxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK7C,UATS,CAChB,CACEU,KAAM,gBACNH,UAAW,iCAQbuC,SAASC,eAAe,W","file":"static/js/main.af9dcdd5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ReminderForm = ({ addReminder, newName, handleReminderChange, newTime, handleTimeChange})  => {\r\n    return(\r\n    <div>\r\n        <form onSubmit={addReminder}>\r\n            <div>\r\n                Topic: <input value={newName} onChange={handleReminderChange} />\r\n            </div>\r\n            <div>\r\n                At time: <input type=\"datetime-local\" value={newTime} onChange={handleTimeChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ReminderForm","import React from 'react'\r\n\r\nconst ViewReminders = ({ reminders, handleDelete }) => {\r\n\r\n    const formatTimestring = (timestring) => {\r\n        const date = new Date(timestring)\r\n        return(\r\n          date.toLocaleString()\r\n        )\r\n    }\r\n\r\n    return(\r\n    <div>\r\n        {reminders.map(reminder => {\r\n            return(\r\n            <div style={{whiteSpace:\"pre\"}} key={reminder.name}>\r\n                {formatTimestring(reminder.timestamp)}{\" \"}{reminder.name}{\" \"}\r\n                <button onClick={() => handleDelete(reminder.id)}>delete</button><br /> <br />\r\n            </div>\r\n            )})}\r\n    </div>     \r\n    )\r\n}\r\n\r\n\r\nexport default ViewReminders","import axios from 'axios'\r\nconst baseUrl = 'https://morning-retreat-13391.herokuapp.com/api/reminders'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deleteEntry = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, deleteEntry }","import React from 'react';\nimport ReminderForm from './components/ReminderForm'\nimport ViewReminders from './components/ViewReminders'\nimport reminderService from './services/reminders'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: props.reminders,\n      newName: '',\n      newTime: ''\n    }\n  }\n\n  componentDidMount() {\n    reminderService\n      .getAll()\n      .then(response => {\n        this.setState({ reminders: response.data })\n      })\n  }\n\n  addReminder = (event) => {\n    event.preventDefault()\n\n    const name = this.state.newName;\n\n    const filteredTopics = this.state.reminders.filter(n => n.name === name)\n\n    if (filteredTopics.length > 0) {\n      alert(\"Reminder already exists\")\n      this.setState({newName: ''})\n      return\n    }\n\n    const reminderObject = {\n      name: name,\n      timestamp: this.state.newTime\n    }\n\n    reminderService\n      .create(reminderObject)\n      .then(response => {\n      this.setState({\n        reminders: this.state.reminders.concat(response.data),\n        newName: ''\n      })\n    })\n  }\n\n  handleReminderChange = (event) => {\n    this.setState({ newName: event.target.value })\n  }\n\n  handleTimeChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newTime: event.target.value})\n  }\n\n  handleDelete = (id) => {\n    if (window.confirm('Do you really want to delete this?')) {\n      reminderService\n        .deleteEntry(id)\n        .then(() => {\n          reminderService\n          .getAll()\n          .then(response => {\n            this.setState({ reminders: response.data })\n          })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Add reminder</h2>\n        <ReminderForm addReminder={this.addReminder} \n                      newName={this.newName} handleReminderChange={this.handleReminderChange}\n                      newTime={this.newTime} handleTimeChange={this.handleTimeChange} />\n\n        <h2>Reminders</h2>\n        <ViewReminders reminders={this.state.reminders} handleDelete={this.handleDelete}  />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst reminders = [\n  {\n    name: 'Buy some eggs',\n    timestamp: \"2018-11-10T13:00:00.141Z\"\n  }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App reminders={reminders} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}